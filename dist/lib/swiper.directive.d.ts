import { NgZone, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { EventEmitter, ElementRef } from '@angular/core';
import { OnInit, DoCheck, OnDestroy, OnChanges } from '@angular/core';
import { SwiperConfig, SwiperConfigInterface } from './swiper.interfaces';
export declare class SwiperDirective implements OnInit, DoCheck, OnDestroy, OnChanges {
    private zone;
    private elementRef;
    private differs;
    private defaults;
    swiper: any;
    configDiff: any;
    disabled: boolean;
    runInsideAngular: boolean;
    config: SwiperConfigInterface;
    s_init: EventEmitter<any>;
    s_slideChangeStart: EventEmitter<any>;
    s_slideChangeEnd: EventEmitter<any>;
    s_slideNextStart: EventEmitter<any>;
    s_slideNextEnd: EventEmitter<any>;
    s_slidePrevStart: EventEmitter<any>;
    s_slidePrevEnd: EventEmitter<any>;
    s_transitionStart: EventEmitter<any>;
    s_transitionEnd: EventEmitter<any>;
    s_touchStart: EventEmitter<any>;
    s_touchMove: EventEmitter<any>;
    s_touchMoveOpposite: EventEmitter<any>;
    s_sliderMove: EventEmitter<any>;
    s_touchEnd: EventEmitter<any>;
    s_click: EventEmitter<any>;
    s_tap: EventEmitter<any>;
    s_doubleTap: EventEmitter<any>;
    s_imagesReady: EventEmitter<any>;
    s_progress: EventEmitter<any>;
    s_reachBeginning: EventEmitter<any>;
    s_reachEnd: EventEmitter<any>;
    s_destroy: EventEmitter<any>;
    s_setTranslate: EventEmitter<any>;
    s_setTransition: EventEmitter<any>;
    s_autoplay: EventEmitter<any>;
    s_autoplayStart: EventEmitter<any>;
    s_autoplayStop: EventEmitter<any>;
    s_lazyImageLoad: EventEmitter<any>;
    s_lazyImageReady: EventEmitter<any>;
    s_paginationRendered: EventEmitter<any>;
    s_scroll: EventEmitter<any>;
    constructor(zone: NgZone, elementRef: ElementRef, differs: KeyValueDiffers, defaults: SwiperConfig);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    update(updateTranslate?: boolean): void;
}
